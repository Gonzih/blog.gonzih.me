<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: haskell | Max Gonzih]]></title>
  <link href="http://blog.gonzih.me/blog/categories/haskell/atom.xml" rel="self"/>
  <link href="http://blog.gonzih.me/"/>
  <updated>2016-06-21T09:56:25+00:00</updated>
  <id>http://blog.gonzih.me/</id>
  <author>
    <name><![CDATA[Max Gonzih ]]></name>
    <email><![CDATA[gonzih@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Building Hacker News json api with Haskell]]></title>
    <link href="http://blog.gonzih.me/blog/2014/08/13/hacker-news-json-api-with-haskell/"/>
    <updated>2014-08-13T21:43:00+00:00</updated>
    <id>http://blog.gonzih.me/blog/2014/08/13/hacker-news-json-api-with-haskell</id>
    <content type="html"><![CDATA[<p>Small announcement post.</p>

<p>Today I launched tiny scotty server that serves json for Hacker News front page.
Project source code is located on <a href="https://github.com/Gonzih/HNApi">github</a>.
You can access api <a href="http://hn.gonzih.me/">here</a>.</p>

<p>Hacker news parser is implemented using <a href="http://hackage.haskell.org/package/hxt-8.5.2">HXT</a>
and <a href="http://egonschiele.github.io/HandsomeSoup/">HandsomeSoup</a>.
Json is served with help of <a href="https://github.com/scotty-web/scotty/">Scotty</a> web framework.
Currently it's running on Heroku using <a href="https://github.com/begriffs/heroku-buildpack-ghc">this ghc-7.8 buildpack</a>.</p>

<p>I don't use RSS since I'm also interested in points and amount of comments.
For me HN is more about interesting links than community and conversations behind the posts.
So I don't really care about anything except front page.</p>

<p>Originally I started this project as a Haskell learning exercise.
I hope someone will find it useful.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Programmer Dvorak and switching workspaces in XMonad]]></title>
    <link href="http://blog.gonzih.me/blog/2012/10/08/programmer-dvorak-and-switching-workspaces-in-xmonad/"/>
    <updated>2012-10-08T16:31:00+00:00</updated>
    <id>http://blog.gonzih.me/blog/2012/10/08/programmer-dvorak-and-switching-workspaces-in-xmonad</id>
    <content type="html"><![CDATA[<p>Recently I migarted from awesome to xmonad. I'm Programmer Dvorak freak, so I stuck with controlling current workspace from numbers row. First hack was to use functional keys [F1..F12] like so:</p>

<p>```haskell</p>

<pre><code>-- mod-[F1..F12]       Switch to workspace N
-- mod-shift-[F1..F12] Move client to workspace N
--
[((m .|. modm, k), windows $ f i)
    | (i, k) &lt;- zip (XMonad.workspaces conf) [xK_F1 .. xK_F12]
    , (f, m) &lt;- [(W.greedyView, 0), (W.shift, shiftMask)]]
</code></pre>

<p>```</p>

<p>But after some research I found that I can detect key symbol using xev command. Here is my latest solution:</p>

<p>```haskell</p>

<pre><code>-- Programmer Dvorak
-- mod-[1..9]       Switch to workspace N
-- mod-shift-[1..9] Move client to workspace N
--
[((m .|. modm, k), windows $ f i)
    | (i, k) &lt;- zip (XMonad.workspaces conf) [xK_ampersand, xK_bracketleft, xK_braceleft, xK_braceright, xK_parenleft
                                             ,xK_equal, xK_asterisk, xK_parenright, xK_plus, xK_bracketright, xK_exclam]
    , (f, m) &lt;- [(W.greedyView, 0), (W.shift, shiftMask)]]
</code></pre>

<p>```</p>

<p>Hooray! It works!</p>
]]></content>
  </entry>
  
</feed>
