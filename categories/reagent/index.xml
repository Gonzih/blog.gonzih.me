<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reagent on Max Gonzih</title>
    <link>https://blog.gonzih.me/categories/reagent/</link>
    <description>Recent content in Reagent on Max Gonzih</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>gonzih@gmail.com (Max Gonzih)</managingEditor>
    <webMaster>gonzih@gmail.com (Max Gonzih)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution 4.0 International License.</copyright>
    <lastBuildDate>Mon, 16 Feb 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.gonzih.me/categories/reagent/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ServerSide rendering of Reagent components</title>
      <link>https://blog.gonzih.me/blog/2015/02/16/serverside-rendering-of-reagent-components/</link>
      <pubDate>Mon, 16 Feb 2015 00:00:00 +0000</pubDate>
      <author>gonzih@gmail.com (Max Gonzih)</author>
      <guid>https://blog.gonzih.me/blog/2015/02/16/serverside-rendering-of-reagent-components/</guid>
      <description>&lt;p&gt;Great thing about React is that you can write what people nowadays call &amp;ldquo;isomorphic JavaScript&amp;rdquo;.
In this post we will not discuss how wrong this term is in many ways,
but instead we will focus on how to achieve similar results in your ClojureScript code using Reagent library.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Two way data bindings in Reagent</title>
      <link>https://blog.gonzih.me/blog/2014/10/22/two-way-data-bindings-in-reagent/</link>
      <pubDate>Wed, 22 Oct 2014 00:00:00 +0000</pubDate>
      <author>gonzih@gmail.com (Max Gonzih)</author>
      <guid>https://blog.gonzih.me/blog/2014/10/22/two-way-data-bindings-in-reagent/</guid>
      <description>&lt;p&gt;Small code snippet showing ability to generate 2 way data bindings in Reagent.
Underneath it&amp;rsquo;s all about core.async.
Also provides ability to apply transformation using transducers.
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>