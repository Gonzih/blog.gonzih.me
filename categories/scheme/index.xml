<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>scheme on Max Gonzih</title>
    <link>https://blog.gonzih.me/categories/scheme/</link>
    <description>Recent content in scheme on Max Gonzih</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>gonzih@gmail.com (Max Gonzih)</managingEditor>
    <webMaster>gonzih@gmail.com (Max Gonzih)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution 4.0 International License.</copyright>
    <lastBuildDate>Tue, 26 Nov 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.gonzih.me/categories/scheme/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Yin-Yang Call/cc puzzle in Ruby</title>
      <link>https://blog.gonzih.me/blog/2013/11/26/yin-yang-call/cc-puzzle-in-ruby/</link>
      <pubDate>Tue, 26 Nov 2013 00:00:00 +0000</pubDate>
      <author>gonzih@gmail.com (Max Gonzih)</author>
      <guid>https://blog.gonzih.me/blog/2013/11/26/yin-yang-call/cc-puzzle-in-ruby/</guid>
      <description>&lt;p&gt;Digging deeper in to the call/cc land I found interesting puzzle called yin-yang.&lt;/p&gt;
&lt;p&gt;Here is Scheme implementation:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:2;-o-tab-size:2;tab-size:2&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;(&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;let* &lt;/span&gt;((&lt;span style=&#34;color:#447fcf&#34;&gt;yin&lt;/span&gt;
        ((&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;lambda &lt;/span&gt;(&lt;span style=&#34;color:#447fcf&#34;&gt;cc&lt;/span&gt;) (&lt;span style=&#34;color:#24909d&#34;&gt;display &lt;/span&gt;#&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;@&lt;/span&gt;) &lt;span style=&#34;color:#40ffff&#34;&gt;cc&lt;/span&gt;) (&lt;span style=&#34;color:#24909d&#34;&gt;call-with-current-continuation &lt;/span&gt;(&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;lambda &lt;/span&gt;(&lt;span style=&#34;color:#447fcf&#34;&gt;c&lt;/span&gt;) &lt;span style=&#34;color:#40ffff&#34;&gt;c&lt;/span&gt;))))
       (&lt;span style=&#34;color:#447fcf&#34;&gt;yang&lt;/span&gt;
        ((&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;lambda &lt;/span&gt;(&lt;span style=&#34;color:#447fcf&#34;&gt;cc&lt;/span&gt;) (&lt;span style=&#34;color:#24909d&#34;&gt;display &lt;/span&gt;#&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#40ffff&#34;&gt;cc&lt;/span&gt;) (&lt;span style=&#34;color:#24909d&#34;&gt;call-with-current-continuation &lt;/span&gt;(&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;lambda &lt;/span&gt;(&lt;span style=&#34;color:#447fcf&#34;&gt;c&lt;/span&gt;) &lt;span style=&#34;color:#40ffff&#34;&gt;c&lt;/span&gt;)))))
(&lt;span style=&#34;color:#447fcf&#34;&gt;yin&lt;/span&gt; &lt;span style=&#34;color:#40ffff&#34;&gt;yang&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It will print &lt;code&gt;@*@**@***@****@*****@******@...&lt;/code&gt; forever.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
