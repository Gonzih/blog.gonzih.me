<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Max Gonzih</title>
    <link>http://blog.gonzih.me/categories/ctags/index.xml</link>
    <description>Recent content on Max Gonzih</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>gonzih@gmail.com (Max Gonzih)</managingEditor>
    <webMaster>gonzih@gmail.com (Max Gonzih)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution 4.0 International License.</copyright>
    <atom:link href="/categories/ctags/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How I cook Ctags in Vim</title>
      <link>http://blog.gonzih.me/blog/2013/03/18/how-i-cook-ctags-in-vim/</link>
      <pubDate>Mon, 18 Mar 2013 00:00:00 +0000</pubDate>
      <author>gonzih@gmail.com (Max Gonzih)</author>
      <guid>http://blog.gonzih.me/blog/2013/03/18/how-i-cook-ctags-in-vim/</guid>
      <description>&lt;p&gt;Ctags is great piece of software. And it took me some time to realize how I can use ctags with vim in optimal for me way. My solution is petty simle. I have few vim functions that vim runs when buffer write is done.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Functions do following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Initialize tags file with symlink to /tmp (tmpfs) with uuid in name if no symlink was found&lt;/li&gt;
&lt;li&gt;Touch tags file&lt;/li&gt;
&lt;li&gt;If file is empty (wc -l return 0 lines) then populate it with &lt;code&gt;ctags -R&lt;/code&gt; command&lt;/li&gt;
&lt;li&gt;Remove all lines from tags file related to current file&lt;/li&gt;
&lt;li&gt;Update tags file with new content of current file with &lt;code&gt;ctags -a&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Why I use symlinks for tags file?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Writes are slow&lt;/li&gt;
&lt;li&gt;Writes are bad for my SSD&lt;/li&gt;
&lt;li&gt;Memory is blazingly fast&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is my code:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&amp;quot; If tags file does not exist initializes it with symlink to tmp with UUID in
&amp;quot; filename
function! InitTagsFileWithSymlink(f)
  let filepath = a:f
  let issymlink = system(&amp;quot;find &#39;&amp;quot; . filepath . &amp;quot;&#39; -type l | wc -l&amp;quot;)
  if issymlink == 0
    let uuid = system(&#39;uuidgen&#39;)
    let cmd  = &#39;ln -s &amp;quot;/tmp/ctags-for-vim-&#39; . uuid . &#39;&amp;quot; &amp;quot;&#39; . filepath . &#39;&amp;quot;&#39;
    let cmd  = substitute(cmd, &#39;\n&#39;, &#39;&#39;, &#39;g&#39;)
    let resp = system(cmd)
  endif
endfunction

&amp;quot; Populates tags file if lines count is equal to 0
&amp;quot; with `ctags -R .`
function! PopulateTagsFile(f)
  let filepath = a:f
  let resp     = system(&#39;touch &amp;quot;&#39; . filepath . &#39;&amp;quot;&#39;)
  let lines    = system(&#39;wc -l &amp;quot;&#39; . filepath . &#39;&amp;quot;&#39;)
  let linescnt = substitute(lines, &#39;\D&#39;, &#39;&#39;, &#39;g&#39;)
  if linescnt == 0
    let cwd  = getcwd()
    let cmd  = &#39;ctags -Rf &amp;quot;&#39;. filepath . &#39;&amp;quot; &amp;quot;&#39; . cwd . &#39;&amp;quot;&#39;
    let resp = system(cmd)
  endif
endfunction

&amp;quot; Remove tags for saved file from tags file
function! DelTagOfFile(file)
  let fullpath    = a:file
  let cwd         = getcwd()
  let tagfilename = cwd . &amp;quot;/tags&amp;quot;
  let f           = substitute(fullpath, cwd . &amp;quot;/&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;)
  let f           = escape(f, &#39;./&#39;)
  let cmd         = &#39;sed --follow-symlinks -i &amp;quot;/&#39; . f . &#39;/d&amp;quot; &amp;quot;&#39; . tagfilename . &#39;&amp;quot;&#39;
  let resp        = system(cmd)
endfunction

&amp;quot; Init tags file
&amp;quot; Populate it
&amp;quot; Remove data related to saved file
&amp;quot; Append it with data for saved file
function! UpdateTags()
  let f           = expand(&amp;quot;%:p&amp;quot;)
  let cwd         = getcwd()
  let tagfilename = cwd . &amp;quot;/tags&amp;quot;
  call InitTagsFileWithSymlink(tagfilename)
  call PopulateTagsFile(tagfilename)
  call DelTagOfFile(f)
  let cmd  = &#39;ctags -a -f &#39; . tagfilename . &#39; &amp;quot;&#39; . f . &#39;&amp;quot;&#39;
  let resp = system(cmd)
endfunction

command UpdateTags call UpdateTags()
autocmd BufWritePost *.rb,*.js,*.coffee,*.clj call UpdateTags()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Enjoy :)&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
