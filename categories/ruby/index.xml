<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on Max Gonzih</title>
    <link>https://blog.gonzih.me/categories/ruby/</link>
    <description>Recent content in Ruby on Max Gonzih</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>gonzih@gmail.com (Max Gonzih)</managingEditor>
    <webMaster>gonzih@gmail.com (Max Gonzih)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution 4.0 International License.</copyright>
    <lastBuildDate>Tue, 04 Mar 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.gonzih.me/categories/ruby/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hardware Cut/Copy/Paste with Arduino Leonardo</title>
      <link>https://blog.gonzih.me/blog/2014/03/04/hardware-cut-copy-paste-with-arduino-leonardo/</link>
      <pubDate>Tue, 04 Mar 2014 00:00:00 +0000</pubDate>
      <author>gonzih@gmail.com (Max Gonzih)</author>
      <guid>https://blog.gonzih.me/blog/2014/03/04/hardware-cut-copy-paste-with-arduino-leonardo/</guid>
      <description>&lt;p&gt;Since I switched to Programmed Dvorak layout default keybindings for different operations started to annoy me sometimes.
I was thinking about hardware cut/copy/paste in apps even before that. But only with Dvorak I realized how useful it can be.
I always wondered why there is no hardware support for that on various keyboard that are out there. And then I saw &lt;a href=&#34;https://keyboard.io&#34;&gt;keyboard.io&lt;/a&gt;.
Project is about hackable ergonomic mechanical keyboards build on top of Teensy/Arduino Micro boards. And I decided to play a little bit with that idea.
Lets start with implementing hardware cut/copy/paste using Leonardo and then lets see how far we can push the idea.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VisualRuby gem on OpenSUSE 13.1</title>
      <link>https://blog.gonzih.me/blog/2013/12/13/visualruby-gem-on-opensuse-13-dot-1/</link>
      <pubDate>Fri, 13 Dec 2013 00:00:00 +0000</pubDate>
      <author>gonzih@gmail.com (Max Gonzih)</author>
      <guid>https://blog.gonzih.me/blog/2013/12/13/visualruby-gem-on-opensuse-13-dot-1/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://d1wvxg652jdms0.cloudfront.net/visualruby/1.png&#34; alt=&#34;visualruby&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I found out about ruby gem called &lt;a href=&#34;https://visualruby.net/&#34;&gt;visualruby&lt;/a&gt; and decided to give it a try. Unfortunately it has a lot of dependencies that were missing on my system.
So to save my (or maybe your&amp;rsquo;s if you are reading this now) time in the future here are required dependencies for OpenSUSE 13.1.
I bet you can figure out similar packages for different distribution.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Yin-Yang Call/cc puzzle in Ruby</title>
      <link>https://blog.gonzih.me/blog/2013/11/26/yin-yang-call-cc-puzzle-in-ruby/</link>
      <pubDate>Tue, 26 Nov 2013 00:00:00 +0000</pubDate>
      <author>gonzih@gmail.com (Max Gonzih)</author>
      <guid>https://blog.gonzih.me/blog/2013/11/26/yin-yang-call-cc-puzzle-in-ruby/</guid>
      <description>&lt;p&gt;Digging deeper in to the call/cc land I found interesting puzzle called yin-yang.&lt;/p&gt;

&lt;p&gt;Here is Scheme implementation:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scheme&#34;&gt;(let* ((yin
        ((lambda (cc) (display #\@) cc) (call-with-current-continuation (lambda (c) c))))
       (yang
        ((lambda (cc) (display #\*) cc) (call-with-current-continuation (lambda (c) c)))))
(yin yang))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It will print &lt;code&gt;@*@**@***@****@*****@******@...&lt;/code&gt; forever.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RSS/Atom reader in Clojure via IMAP</title>
      <link>https://blog.gonzih.me/blog/2013/06/28/rss-atom-reader-in-clojure-via-imap/</link>
      <pubDate>Fri, 28 Jun 2013 00:00:00 +0000</pubDate>
      <author>gonzih@gmail.com (Max Gonzih)</author>
      <guid>https://blog.gonzih.me/blog/2013/06/28/rss-atom-reader-in-clojure-via-imap/</guid>
      <description>&lt;h3 id=&#34;motivation&#34;&gt;Motivation&lt;/h3&gt;

&lt;p&gt;Google Reader was shut down and I started looking for alternatives.
And sadly I did not found anything close to Google Reader experience.
There are plenty good alternatives, but all of them suffer from some kind of background noise (social based features, weird hotkeys, weird ui, unusable mobile clients and etc.).
All I wanted was simple to use news reader.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How To Fix Octopress Pygments Error on Arch Linux</title>
      <link>https://blog.gonzih.me/blog/2011/09/21/how-to-fix-octopress-pygments-error-on-arch-linux/</link>
      <pubDate>Wed, 21 Sep 2011 00:00:00 +0000</pubDate>
      <author>gonzih@gmail.com (Max Gonzih)</author>
      <guid>https://blog.gonzih.me/blog/2011/09/21/how-to-fix-octopress-pygments-error-on-arch-linux/</guid>
      <description>&lt;p&gt;If your get following pygments error using octopress with arch linux.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Building site: source -&amp;gt; public
  File &amp;quot;&amp;lt;string&amp;gt;&amp;quot;, line 1
    import sys; print sys.executable
                        ^
SyntaxError: invalid syntax
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It&amp;rsquo;s happens because RubyPython use Python version 2 by calling &amp;ldquo;python&amp;rdquo; command. By default python equal to python3 in Arch Linux.&lt;/p&gt;

&lt;p&gt;For fix simple add ruby file to plugins directory with following code.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tmux &#43; Rvm &#43; Zsh Fix</title>
      <link>https://blog.gonzih.me/blog/2011/09/15/tmux-rvm-zsh-fix/</link>
      <pubDate>Thu, 15 Sep 2011 00:00:00 +0000</pubDate>
      <author>gonzih@gmail.com (Max Gonzih)</author>
      <guid>https://blog.gonzih.me/blog/2011/09/15/tmux-rvm-zsh-fix/</guid>
      <description>&lt;p&gt;If you have throuble with tmux and rvm default simple add following to end of your .zshrc file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[[ $TERM = &amp;quot;screen&amp;quot; ]] &amp;amp;&amp;amp; rvm use default
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>