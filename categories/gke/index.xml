<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gke on Max Gonzih</title>
    <link>https://blog.gonzih.me/categories/gke/</link>
    <description>Recent content in Gke on Max Gonzih</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>gonzih@gmail.com (Max Gonzih)</managingEditor>
    <webMaster>gonzih@gmail.com (Max Gonzih)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution 4.0 International License.</copyright>
    <lastBuildDate>Fri, 18 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.gonzih.me/categories/gke/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Routing with Go on Google Cloud Functions</title>
      <link>https://blog.gonzih.me/blog/2019/01/18/routing-with-go-on-google-cloud-functions/</link>
      <pubDate>Fri, 18 Jan 2019 00:00:00 +0000</pubDate>
      <author>gonzih@gmail.com (Max Gonzih)</author>
      <guid>https://blog.gonzih.me/blog/2019/01/18/routing-with-go-on-google-cloud-functions/</guid>
      <description>Couple of days ago Google cloud functions got official support for go 1.11. I got interested in how to handle routing in cloud functions in go, so after couple of experiments I came up with a solution based on http.ServeMux.
To get started with cloud functions you can follow this simple tutorial.
One of many neat things about cloud functions is that they can be built from existing Github repository. You simply have to define Google source repository that mirrors one on Github and use this repository as source for your newly defined cloud function.</description>
    </item>
    
  </channel>
</rss>